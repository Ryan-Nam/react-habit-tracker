{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/projects/react-habit-tracker/src/app.jsx\";\nimport React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habits: [{\n        id: 1,\n        name: 'Reading',\n        count: 0\n      }, {\n        id: 2,\n        name: 'Running',\n        count: 0\n      }, {\n        id: 3,\n        name: 'Coding',\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      const habits = [...this.state.habits]; // Spread Operator\n\n      const index = habits.indexOf(habit);\n      habits[index].count++;\n      this.setState({\n        habits\n      }); // key: value == 새로운 배열을 만들어주어야함 == key value가 동일한 경우 한새로 생략 가능 habits\n    };\n\n    this.handledDecrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      const count = habits[index].count - 1;\n      habit[index].count = count < 0 ? 0 : count;\n      this.setState({\n        habits: habits\n      });\n    };\n\n    this.handledDelete = habit => {\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({\n        habits: habits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        totalCount: this.state.habits.filter(item => item.count > 0).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Habits, {\n        habits: this.state.habits,\n        onIncrement: this.handleIncrement,\n        onDecrement: event => this.handledDecrement(event) // this is long way, the other two are short way to declare arrow function\n        ,\n        onDelete: this.handledDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ryan/Desktop/projects/react-habit-tracker/src/app.jsx"],"names":["React","Component","Habits","Navbar","App","state","habits","id","name","count","handleIncrement","habit","index","indexOf","setState","handledDecrement","handledDelete","filter","item","render","length","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OADM,EAEN;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAFM,EAGN;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,QAAf;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAHM;AADF,KADkB;;AAAA,SAW1BC,eAX0B,GAWRC,KAAK,IAAI;AACzB,YAAML,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf,CADyB,CACc;;AACvC,YAAMM,KAAK,GAAGN,MAAM,CAACO,OAAP,CAAeF,KAAf,CAAd;AACAL,MAAAA,MAAM,CAACM,KAAD,CAAN,CAAcH,KAAd;AACA,WAAKK,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd,EAJyB,CAIE;AAC5B,KAhByB;;AAAA,SAkB1BS,gBAlB0B,GAkBPJ,KAAK,IAAI;AAC1B,YAAML,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf;AACA,YAAMM,KAAK,GAAGN,MAAM,CAACO,OAAP,CAAeF,KAAf,CAAd;AACA,YAAMF,KAAK,GAAGH,MAAM,CAACM,KAAD,CAAN,CAAcH,KAAd,GAAqB,CAAnC;AACAE,MAAAA,KAAK,CAACC,KAAD,CAAL,CAAaH,KAAb,GAAqBA,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAArC;AACA,WAAKK,QAAL,CAAc;AAACR,QAAAA,MAAM,EAACA;AAAR,OAAd;AACD,KAxByB;;AAAA,SA0B1BU,aA1B0B,GA0BVL,KAAK,IAAI;AACrB,YAAML,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBW,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYI,KAAK,CAACJ,EAAnD,CAAf;AACA,WAAKO,QAAL,CAAc;AAACR,QAAAA,MAAM,EAACA;AAAR,OAAd;AACH,KA7ByB;AAAA;;AA+B1Ba,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,UAAU,EAAE,KAAKd,KAAL,CAAWC,MAAX,CAAkBW,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACT,KAAL,GAAa,CAA9C,EAAiDW;AAD/D;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACA,QAAA,MAAM,EAAI,KAAKf,KAAL,CAAWC,MADrB;AAEA,QAAA,WAAW,EAAE,KAAKI,eAFlB;AAGA,QAAA,WAAW,EAAGW,KAAD,IAAW,KAAKN,gBAAL,CAAsBM,KAAtB,CAHxB,CAGsD;AAHtD;AAIA,QAAA,QAAQ,EAAE,KAAKL;AAJf;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAaD;;AA7CyB;;AAgD5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n  };\n\n//'handleIncreament' 는 변수\n  // 이 변수는 함수를 가리키고 있음 -> 즉, onIncrement={this.handleIncremnet} 하게되면, 함수를 바로 호출하는게 아니라, 포인팅만 하는것임\n  handleIncrement = habit => {\n    const habits = [...this.state.habits]; // Spread Operator\n    const index = habits.indexOf(habit);\n    habits[index].count++;\n    this.setState({ habits }); // key: value == 새로운 배열을 만들어주어야함 == key value가 동일한 경우 한새로 생략 가능 habits\n  };\n\n  handledDecrement = habit => {\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    const count = habits[index].count -1;\n    habit[index].count = count < 0 ? 0 : count;\n    this.setState({habits:habits});\n  };\n\n  handledDelete = habit => {\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({habits:habits});   \n  };\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter(item => item.count > 0).length}\n        />\n        <Habits\n        habits = {this.state.habits}\n        onIncrement={this.handleIncrement}\n        onDecrement={(event) => this.handledDecrement(event)} // this is long way, the other two are short way to declare arrow function\n        onDelete={this.handledDelete}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}