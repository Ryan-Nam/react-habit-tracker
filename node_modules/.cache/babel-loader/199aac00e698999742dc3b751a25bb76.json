{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/projects/react-habit-tracker/src/components/habits.jsx\";\nimport React, { Component } from 'react';\nimport Habit from './habit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Habits extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habits: [// Firstly, assign Id\n      {\n        id: 1,\n        name: 'Reading',\n        count: 0\n      }, {\n        id: 2,\n        name: 'Running',\n        count: 0\n      }, {\n        id: 3,\n        name: 'Coding',\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      console.log(`This is handleIncremnet ${habit}`);\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      habits[index].count++;\n      this.setState(this.state);\n    };\n\n    this.handledDecrement = habit => {\n      //const count = this.state.count -1;\n      //this.setState({count: count < 0 ? 0 : count});\n      console.log(`This is Decrement ${habit}`);\n    };\n\n    this.handledDelete = habit => {\n      console.log(`This is Delete ${habit}`);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.habits.map(habit => /*#__PURE__*/_jsxDEV(Habit, {\n        habit: habit,\n        onIncrement: this.handleIncrement,\n        onDecrement: event => this.handledDecrement(event) // this is long way, the other two are short way to declare arrow function\n        ,\n        onDelete: this.handledDelete\n      }, habit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) // habit -> props key, {habit} -> map's parameter\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Habits;","map":{"version":3,"sources":["/Users/ryan/Desktop/projects/react-habit-tracker/src/components/habits.jsx"],"names":["React","Component","Habit","Habits","state","habits","id","name","count","handleIncrement","habit","console","log","index","indexOf","setState","handledDecrement","handledDelete","render","map","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,CACN;AACA;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAFM,EAGN;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAHM,EAIN;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,QAAf;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAJM;AADF,KADqB;;AAAA,SAW7BC,eAX6B,GAWXC,KAAK,IAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BF,KAAM,EAA7C;AACA,YAAML,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf;AACA,YAAMQ,KAAK,GAAGR,MAAM,CAACS,OAAP,CAAeJ,KAAf,CAAd;AACAL,MAAAA,MAAM,CAACQ,KAAD,CAAN,CAAcL,KAAd;AACA,WAAKO,QAAL,CAAc,KAAKX,KAAnB;AACD,KAjB4B;;AAAA,SAmB7BY,gBAnB6B,GAmBVN,KAAK,IAAI;AAC1B;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBF,KAAM,EAAvC;AACD,KAvB4B;;AAAA,SAyB7BO,aAzB6B,GAyBbP,KAAK,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBF,KAAM,EAApC;AACD,KA3B4B;AAAA;;AA6B7BQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CAAsBT,KAAK,iBAC1B,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,WAAW,EAAE,KAAKD,eAHpB;AAIE,QAAA,WAAW,EAAGW,KAAD,IAAW,KAAKJ,gBAAL,CAAsBI,KAAtB,CAJ1B,CAIwD;AAJxD;AAKE,QAAA,QAAQ,EAAE,KAAKH;AALjB,SACOP,KAAK,CAACJ,EADb;AAAA;AAAA;AAAA;AAAA,cAD0B,CAOhB;AAPX;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA3C4B;;AA8C/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport Habit from './habit'\n\nclass Habits extends Component {\n  state = {\n    habits: [\n      // Firstly, assign Id\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n  }\n  //'handleIncreament' 는 변수\n  // 이 변수는 함수를 가리키고 있음 -> 즉, onIncrement={this.handleIncremnet} 하게되면, 함수를 바로 호출하는게 아니라, 포인팅만 하는것임\n  handleIncrement = habit => {\n    console.log(`This is handleIncremnet ${habit}`);\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    habits[index].count++;\n    this.setState(this.state);\n  }\n\n  handledDecrement = habit => {\n    //const count = this.state.count -1;\n    //this.setState({count: count < 0 ? 0 : count});\n    console.log(`This is Decrement ${habit}`);\n  }\n\n  handledDelete = habit => {\n    console.log(`This is Delete ${habit}`);\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.habits.map(habit => (\n          <Habit\n            key={habit.id}\n            habit={habit}\n            onIncrement={this.handleIncrement}\n            onDecrement={(event) => this.handledDecrement(event)} // this is long way, the other two are short way to declare arrow function\n            onDelete={this.handledDelete}\n          ></Habit> // habit -> props key, {habit} -> map's parameter\n        ))}\n      </ul>\n    )\n  }\n}\n\nexport default Habits\n"]},"metadata":{},"sourceType":"module"}